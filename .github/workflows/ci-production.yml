name: DEPLOY-PRODUCTION

on:
  push:
    branches:
      - production

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        run: |
          curl -sL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs
          node -v
          npm -v

      - name: Create env file
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}
        run: echo "$ENV_FILE" | base64 --decode > .env

      - name: Install dependencies (npm)
        run: npm install

      - name: Run Format
        run: npm run format

      - name: Run Lint
        run: npm run lint

      - name: Build React App
        run: npm run build

      - name: Git Semantic Version
        uses: PaulHatch/semantic-version@v4.0.3
        with:
          major_pattern: 'mayor'
          minor_pattern: 'feat'
          format: '${major}.${minor}.${increment}'
        id: version

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Build Docker Image
        env:
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          NEW_VERSION: ${{ steps.version.outputs.version }}
        run: |
          docker build -t $PROJECT_NAME:$NEW_VERSION .
          docker build -t $PROJECT_NAME:latest .

      - name: Push Docker Image
        env:
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          NEW_VERSION: ${{ steps.version.outputs.version }}
        run: |
          docker push $PROJECT_NAME:$NEW_VERSION
          docker push $PROJECT_NAME:latest
